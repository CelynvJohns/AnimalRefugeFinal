@model AnimalRefugeFinal.Models.AdoptionApplication

@{
    ViewData["Title"] = "Adoption Application";
}

<style>
    form {
        max-width: 400px;
        margin: auto;
    }

    div {
        margin-bottom: 15px;
    }

    label {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
    }

    input,
    textarea {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
    }

    button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        button:hover {
            background-color: #45a049;
        }
</style>

<h2 style="text-align: center;">@ViewData["Title"]</h2>

<form asp-action="Apply" method="post">

    @if (User.Identity.IsAuthenticated)
    {
        <input type="hidden" asp-for="User" value="@User.Identity.Name" />
    }

    <div>
        <label asp-for="FirstName">First Name:</label>
        <input asp-for="FirstName" />
    </div>
    <div>
        <label asp-for="LastName">Last Name:</label>
        <input asp-for="LastName" />
    </div>

    <div>
        <label asp-for="Email">Email:</label>
        <input asp-for="Email" />
    </div>

    <div>
        <label asp-for="PhoneNumber">Phone Number:</label>
        <input asp-for="PhoneNumber" />
    </div>

    <div>
        <label asp-for="Address">Address:</label>
        <textarea asp-for="Address"></textarea>
    </div>

    <div>
        <label asp-for="WantsToAdoptDog">Do you want to adopt a dog?</label>
        <input asp-for="WantsToAdoptDog" type="checkbox" />
    </div>

    <div>
        <label asp-for="HasFencedInYard">Do you have a fenced-in yard?</label>
        <input asp-for="HasFencedInYard" type="checkbox" />
    </div>

    <div>
        <label asp-for="NumberOfPets">Number of Pets You are looking to Adopt:</label>
        <input asp-for="NumberOfPets" type="number" min="1" id="numberOfPets" />
    </div>

    <!-- STILL NEED TO FIGURE OUT HOW TO MAKE THIS WORK, PROBABLY WILL NEED TO USE SESSIONS-->
    @for (int i = 1; i <= Model.NumberOfPets; i++)
    {
        <div id="petsContainer">
            <label asp-for="Pets[i].Name">Pet Name @i:</label>
            <input asp-for="Pets[i].Name" />

            <div>
                <label asp-for="Pets[i].Reason">Why do you want to adopt this pet?</label>
                <textarea asp-for="Pets[i].Reason"></textarea>
            </div>
        </div>
    }

    
        <div>
            <label asp-for="CurrentPetNumber">Current Pets you have at Home:</label>
            <input asp-for="CurrentPetNumber" type="number" id="CurrentPetNumber" />
        </div>
    @for (int i = 1; i <= Model.CurrentPetNumber; i++)
    {
        <div id="CurrentPetContainer">
            <label asp-for="CurrentPet[i].CurrentPetName"> Current Pet Name @i:</label>
            <input asp-for="CurrentPet[i].CurrentPetName"/>
            <label asp-for="CurrentPet[i].CurrentPetAge">Current Pet Age @i:</label>
            <input asp-for="CurrentPet[i].CurrentPetAge" />
            <label asp-for="CurrentPet[i].CurrentPetBreed">Current Pet Breed @i:</label>
            <input asp-for="CurrentPet[i].CurrentPetBreed" />
            <label asp-for="CurrentPet[i].VetName">Current Vet @i:</label>
            <input asp-for="CurrentPet[i].VetName" />
            <label asp-for="CurrentPet[i].VetPhoneNumber">Current Vet Phone Number @i:</label>
            <input asp-for="CurrentPet[i].VetPhoneNumber" />

        </div>
    }
    <div>
        <label asp-for="CurrentHumansNumber">Current number of Family members in your House:</label>
        <input asp-for="CurrentHumansNumber" type="number" id="CurrentHumansNumber" />
    </div>
    @for (int i = 1; i < Model.CurrentHumansNumber; i++) 
    {
        <div class="currentHumanContainer">
            <label asp-for="CurrentHumans[i].FirstName"> Family member First Name @i:</label>
            <input asp-for="CurrentHumans[i].FirstName" />
            <label asp-for="CurrentHumans[i].LastName"> Family member Last Name @i:</label>
            <input asp-for="CurrentHumans[i].LastName" />
            <label asp-for="CurrentHumans[i].Age"> Family member Age @i:</label>
            <input asp-for="CurrentHumans[i].Age" />
        </div>
    }




    <div>
        <button type="submit">Submit Application</button>
    </div>
</form>
@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var numberOfPetsInput = document.getElementById("numberOfPets");
            var petsContainer = document.getElementById("petsContainer");

            numberOfPetsInput.addEventListener("change", function () {
                updatePetFields();
            });

            function updatePetFields() {
                var numberOfPets = parseInt(numberOfPetsInput.value, 10);

                // Clear existing pet fields
                petsContainer.innerHTML = "";

                // Add new pet fields based on the number entered
                for (var i = 1; i <= numberOfPets; i++) {
                    var petNameLabel = document.createElement("label");
                    petNameLabel.innerText = "Pet Name " + i + ":";
                    petsContainer.appendChild(petNameLabel);

                    var petNameInput = document.createElement("input");
                    petNameInput.setAttribute("name", "Pets[" + (i - 1) + "].Name");
                    petsContainer.appendChild(petNameInput);

                    var petReasonLabel = document.createElement("label");
                    petReasonLabel.innerText = "Why do you want to adopt this pet?";
                    petsContainer.appendChild(petReasonLabel);

                    var petReasonTextarea = document.createElement("textarea");
                    petReasonTextarea.setAttribute("name", "Pets[" + (i - 1) + "].Reason");
                    petsContainer.appendChild(petReasonTextarea);

                    var div = document.createElement("div");
                    petsContainer.appendChild(div);
                }
            }
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Script for updating fields related to 'CurrentPet'
            var currentPetNumberInput = document.getElementById("CurrentPetNumber");
            var currentPetContainer = document.getElementById("CurrentPetContainer");

            currentPetNumberInput.addEventListener("change", function () {
                updateCurrentPetFields();
            });

            function updateCurrentPetFields() {
                var currentPetNumber = parseInt(currentPetNumberInput.value, 10);

                // Clear existing current pet fields
                currentPetContainer.innerHTML = "";

                // Add new current pet fields based on the number entered
                for (var i = 0; i < currentPetNumber; i++) {
                    var currentPetNameLabel = document.createElement("label");
                    currentPetNameLabel.innerText = "Current Pet Name " + i + ":";
                    currentPetContainer.appendChild(currentPetNameLabel);

                    var currentPetNameInput = document.createElement("input");
                    currentPetNameInput.setAttribute("name", "CurrentPet[" + i + "].CurrentPetName");
                    currentPetContainer.appendChild(currentPetNameInput);

                    var currentPetAgeLabel = document.createElement("label");
                    currentPetAgeLabel.innerText = "Current Pet Age " + i + ":";
                    currentPetContainer.appendChild(currentPetAgeLabel);

                    var currentPetAgeInput = document.createElement("input");
                    currentPetAgeInput.setAttribute("name", "CurrentPet[" + i + "].CurrentPetAge");
                    currentPetContainer.appendChild(currentPetAgeInput);

                    var currentPetBreedLabel = document.createElement("label");
                    currentPetBreedLabel.innerText = "Current Pet Breed " + i + ":";
                    currentPetContainer.appendChild(currentPetBreedLabel);

                    var currentPetBreedInput = document.createElement("input");
                    currentPetBreedInput.setAttribute("name", "CurrentPet[" + i + "].CurrentPetBreed");
                    currentPetContainer.appendChild(currentPetBreedInput);

                    var vetNameLabel = document.createElement("label");
                    vetNameLabel.innerText = "Current Vet " + i + ":";
                    currentPetContainer.appendChild(vetNameLabel);

                    var vetNameInput = document.createElement("input");
                    vetNameInput.setAttribute("name", "CurrentPet[" + i + "].VetName");
                    currentPetContainer.appendChild(vetNameInput);

                    var vetPhoneNumberLabel = document.createElement("label");
                    vetPhoneNumberLabel.innerText = "Current Vet Phone Number " + i + ":";
                    currentPetContainer.appendChild(vetPhoneNumberLabel);

                    var vetPhoneNumberInput = document.createElement("input");
                    vetPhoneNumberInput.setAttribute("name", "CurrentPet[" + i + "].VetPhoneNumber");
                    currentPetContainer.appendChild(vetPhoneNumberInput);

                    var div = document.createElement("div");
                    currentPetContainer.appendChild(div);
                }
            }
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Script for updating fields related to 'CurrentHumans'
            var currentHumansNumberInput = document.getElementById("CurrentHumansNumber");
            var currentHumansContainer = document.getElementById("currentHumansContainer");

            currentHumansNumberInput.addEventListener("change", function () {
                updateCurrentHumansFields();
            });

            function updateCurrentHumansFields() {
                var currentHumansNumber = parseInt(currentHumansNumberInput.value, 10);

                // Clear existing current humans fields
                currentHumansContainer.innerHTML = "";

                // Add new current humans fields based on the number entered
                for (var i = 0; i < currentHumansNumber; i++) {
                    var firstNameLabel = document.createElement("label");
                    firstNameLabel.innerText = "Family member First Name " + i + ":";
                    currentHumansContainer.appendChild(firstNameLabel);

                    var firstNameInput = document.createElement("input");
                    firstNameInput.setAttribute("name", "CurrentHumans[" + i + "].FirstName");
                    currentHumansContainer.appendChild(firstNameInput);

                    var lastNameLabel = document.createElement("label");
                    lastNameLabel.innerText = "Family member Last Name " + i + ":";
                    currentHumansContainer.appendChild(lastNameLabel);

                    var lastNameInput = document.createElement("input");
                    lastNameInput.setAttribute("name", "CurrentHumans[" + i + "].LastName");
                    currentHumansContainer.appendChild(lastNameInput);

                    var ageLabel = document.createElement("label");
                    ageLabel.innerText = "Family member Age " + i + ":";
                    currentHumansContainer.appendChild(ageLabel);

                    var ageInput = document.createElement("input");
                    ageInput.setAttribute("name", "CurrentHumans[" + i + "].Age");
                    currentHumansContainer.appendChild(ageInput);

                    var div = document.createElement("div");
                    currentHumansContainer.appendChild(div);
                }
            }
        });
    </script>

}